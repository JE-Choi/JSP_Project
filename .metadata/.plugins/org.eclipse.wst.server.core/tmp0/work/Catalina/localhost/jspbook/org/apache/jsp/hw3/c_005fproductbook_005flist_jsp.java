/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-05-20 04:49:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.hw3;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import jspbook.hw3.*;

public final class c_005fproductbook_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"addrbook_error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"productbook.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("<!-- 확인 메세지 띄움을 위한 스크립트 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("// 링크를 통해서 화면이동하는 것이 아니라 자바 스크립트를 부르고 그 안에서 화면 이동할 거임.\r\n");
      out.write("\tfunction check(pb_id){\r\n");
      out.write("\t\tpwd = prompt('수정/삭제 하려면 비밀번호를 넣으세요.');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// id와 pwd을 확인한 후 페이지 연결\r\n");
      out.write("\t\t// productbook_edit_form.jsp을 직접 부르지 않고, productbook_control으로 연결\r\n");
      out.write("\t\tdocument.location.href = \"productbook_control.jsp?action=edit&pb_id=\"+pb_id+\"&pwd=\"+pwd;\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<title>나의 쇼핑몰</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      java.util.ArrayList datas_product = null;
      datas_product = (java.util.ArrayList) _jspx_page_context.getAttribute("datas_product", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (datas_product == null){
        datas_product = new java.util.ArrayList();
        _jspx_page_context.setAttribute("datas_product", datas_product, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div align=\"center\"> \r\n");
      out.write("<H2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("님 환영합니다.</H2>\r\n");
      out.write("<a href=\"addrbook_control.jsp?action=cedit&ab_id=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">고객정보변경</a>\r\n");
      out.write("<HR>\r\n");
      out.write("<form>\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr><th>번호</th><th>물품명</th><th>물품종류</th><th>물품가격</th><th>물품 판매처</th><th>물품 설명</th><th>물품URL</th></tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
 
			for(ProductBook pb : (ArrayList<ProductBook>)datas_product){
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<!-- 링크로 연결된 수정화면으로 넘어가기 전에 자바 스크립트를 이용하여 확인 메세지를 띄움 -->\r\n");
      out.write("\t\t<td><a href=\"javascript:check(");
      out.print(pb.getProduct_id());
      out.write(')');
      out.write('"');
      out.write('>');
      out.print(pb.getProduct_id());
      out.write("</a></td>\r\n");
      out.write("\t\t<td>");
      out.print(pb.getProduct_name());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(pb.getProduct_type());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(pb.getProduct_price());
      out.write("원</td>\r\n");
      out.write("\t\t<td>");
      out.print(pb.getProduct_dealer());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(pb.getProduct_explanation());
      out.write("</td>\r\n");
      out.write("\t\t<td><a href=\"");
      out.print(pb.getProduct_url());
      out.write("\" target=\"_black\">");
      out.print(pb.getProduct_url());
      out.write("</a></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
