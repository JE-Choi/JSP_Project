/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.93
 * Generated at: 2019-06-08 07:04:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.addrbook;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import jspbook.addrbook.*;

public final class addrbook_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"addrbook_error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<!-- 0429 스타일 연결 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"addrbook.css\" type=\"text/css\" media=\"screen\" />\r\n");
      out.write("<!-- 확인 메세지 띄움을 위한 스크립트 -->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("// 링크를 통해서 화면이동하는 것이 아니라 자바 스크립트를 부르고 그 안에서 화면 이동할 거임.\r\n");
      out.write("\tfunction check(ab_id){\r\n");
      out.write("\t// 0429 스크립트라 변수타입 설정 안해도 돌아가는거, String으로 하면 오류 남. 할거면 var나, let으로 하기\r\n");
      out.write("\t\tpwd = prompt('수정/삭제 하려면 비밀번호를 넣으세요.');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// addrbook_edit_form.jsp을 직접 부르지 않고, control을 부를 것\r\n");
      out.write("\t\t// id와 pwd를 넣어 맞는지 확인한다. \r\n");
      out.write("\t\tdocument.loaction.href = \"addrbook_control.jsp?action=edit&ab_id=\"+ab_id+\"&pwd\"+pwd;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>주소록:목록화면</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<!-- 0429 controls.jsp에서 forward될때 request에 저장해 놓은 데이터를 접근할 수 있는 방법\r\n");
      out.write("오타 주의 usebean아니고 useBean임.\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");
      java.util.ArrayList datas = null;
      datas = (java.util.ArrayList) _jspx_page_context.getAttribute("datas", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (datas == null){
        datas = new java.util.ArrayList();
        _jspx_page_context.setAttribute("datas", datas, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div align=\"center\"> \r\n");
      out.write("<H2>주소록:목록화면</H2>\r\n");
      out.write("<HR>\r\n");
      out.write("<form>\r\n");
      out.write("\t<a href=\"addrbook_form.jsp\">주소록 등록</a><P>\r\n");
      out.write("\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr><th>번호</th><th>이 름</th><th>이메일</th><th>전화번호</th><th>생 일</th><th>회 사</th><th>메 모</th></tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<td><a href=\"addrbook_edit_form.jsp\">1</a></td>\r\n");
      out.write("\t\t<td>홍길동</td>\r\n");
      out.write("\t\t<td>hong@gmail.com</td>\r\n");
      out.write("\t\t<td>010-1234-5678</td>\r\n");
      out.write("\t\t<td>1999-03-01</td>\r\n");
      out.write("\t\t<td>덕성여자대학교</td>\r\n");
      out.write("\t\t<td>컴퓨터공학과</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
 
			for(AddrBook ab : (ArrayList<AddrBook>)datas){
		
      out.write("\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t<!-- 0429 링크로 연결된 수정으로 넘어가기 전에 확인 메세지 띄움: 자바 스크립트 이용 -->\r\n");
      out.write("\t\t<td><a href=\"javascript:check(");
      out.print(ab.getAb_id());
      out.write(')');
      out.write('"');
      out.write('>');
      out.print(ab.getAb_id());
      out.write("</a></td>\r\n");
      out.write("\t\t<td>");
      out.print(ab.getAb_name());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(ab.getAb_email());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(ab.getAb_tel());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(ab.getAb_birth());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(ab.getAb_comdept());
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(ab.getAb_memo());
      out.write("</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
